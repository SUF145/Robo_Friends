{"version":3,"sources":["Components/Card.js","Components/CardArray.js","Components/SearchBox.js","Components/Scroll.js","Components/ErrorBoundary.js","Container/App.js","reportWebVitals.js","index.js"],"names":["Card","id","name","email","className","src","alt","CardArray","robots","map","user","i","username","SearchBox","SearchChange","type","placeholder","onChange","Scroll","props","style","overflowY","borderTop","height","marginTop","children","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","SearchField","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","React","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"2OAceA,EAZF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,MACxB,OACE,sBAAKC,UAAY,6DAAjB,UACC,qBAAKC,IAAG,+BAA2BJ,GAAMK,IAAM,YAC/C,gCACC,6BAAKJ,IACL,4BAAIC,WCiBMI,EArBG,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACnB,OACC,8BAECA,EAAOC,KAAI,SAACC,EAAMC,GACjB,OACE,cAAC,EAAD,CAEAV,GAAIO,EAAOG,GAAGV,GACdC,KAAMM,EAAOG,GAAGT,KAChBU,SAAUJ,EAAOG,GAAGC,SACpBT,MAAOK,EAAOG,GAAGR,OAJVQ,SCCEE,EAVG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aACnB,OACC,uBACCV,UAAW,0CACXW,KAAK,SACLC,YAAc,gBACdC,SAAYH,KCEAI,G,MARA,SAACC,GACf,OACC,qBAAKC,MAAS,CAACC,UAAY,SAAUC,UAAW,kBAAmBC,OAAS,QAASC,UAAW,QAAhG,SACEL,EAAMM,aCiBKC,E,kDAnBd,WAAYP,GAAO,IAAD,8BACjB,cAAMA,IACDQ,MAAQ,CACZC,UAAU,GAHM,E,qDAOnB,SAAkBC,EAAOC,GACxBC,KAAKC,SAAS,CAACJ,UAAU,M,oBAG1B,WACC,OAAGG,KAAKJ,MAAMC,SACN,iEAEDG,KAAKZ,MAAMM,a,GAhBSQ,aCiDbC,E,kDA3Cd,aAAe,IAAD,8BACb,gBAaDC,eAAiB,SAACC,GACjB,EAAKJ,SAAS,CAACK,YAAaD,EAAME,OAAOC,SAbzC,EAAKZ,MAAQ,CACZnB,OAAQ,GACR6B,YAAc,IAJF,E,qDAQd,WAAqB,IAAD,OACnBG,MAAM,8CACFC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKZ,SAAS,CAACxB,OAASoC,S,oBAO3C,WACE,MAA+Bb,KAAKJ,MAA5BnB,EAAR,EAAQA,OAAQ6B,EAAhB,EAAgBA,YACVQ,EAAiBrC,EAAOsC,QAAO,SAAAC,GACrC,OAAOA,EAAM7C,KAAK8C,cAAcC,SAASZ,EAAYW,kBAErD,OAAIxC,EAAO0C,OAIT,sBAAK9C,UAAY,KAAjB,UACA,oBAAIA,UAAU,KAAd,SAAmB,mDACnB,cAAC,EAAD,CAAWU,aAAeiB,KAAKI,iBAC/B,cAAC,EAAD,UACC,cAAC,EAAD,UACC,cAAC,EAAD,CAAW3B,OAAUqC,WARjB,6C,GAzBOM,IAAMlB,WCKTmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SAKjDX,M","file":"static/js/main.3a97027a.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({id, name, email}) => {\r\n\treturn (\r\n\t\t\t<div className = \"tc bg-light-green o-100 dib br3 ma2 pd3 grow bw-2 shadow-5\">\r\n\t\t\t\t<img src ={`https://robohash.org/${id}`} alt = \"sufiyan\"/>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h2>{name}</h2>\r\n\t\t\t\t\t<p>{email}</p>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\n\r\nconst CardArray = ({robots}) => {\r\n\treturn(\r\n\t\t<div>\r\n\t\t{\r\n\t\t\trobots.map((user, i) => {\r\n\t\t\t\treturn(\r\n\t\t\t\t\t\t<Card\r\n\t\t\t\t\t\tkey = {i} \r\n\t\t\t\t\t\tid={robots[i].id} \r\n\t\t\t\t\t\tname={robots[i].name} \r\n\t\t\t\t\t\tusername={robots[i].username} \r\n\t\t\t\t\t\temail={robots[i].email}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t);\r\n\t\t\t})\r\n\t\t\t\r\n\t\t}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default CardArray; ","import React from'react';\r\n\r\nconst SearchBox = ({SearchChange}) => {\r\n\treturn (\r\n\t\t<input\r\n\t\t\tclassName= 'bg-lightest-blue pa3 b--light-green bw2' \r\n\t\t\ttype='search' \r\n\t\t\tplaceholder = 'Search Robots'\r\n\t\t\tonChange = {SearchChange} />\r\n\t\t);\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n\treturn (\r\n\t\t<div style = {{overflowY : 'scroll', borderTop: '3px solid green', height : '800px', marginTop: '10px'}}>\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t\t);\r\n};\r\n\r\nexport default Scroll;","import React, {Component} from 'react';\r\n\r\nclass ErrorBoundary extends Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\thasError: false\r\n\t\t}\r\n\t}\r\n\r\ncomponentDidCatch(error, info){\r\n\tthis.setState({hasError: true})\r\n}\r\n\r\nrender() {\r\n\tif(this.state.hasError){\r\n\t\treturn <h1>ooooops, Theres something wrong</h1>\r\n\t}\r\n\treturn this.props.children\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;","import React from 'react';\r\nimport CardArray from '../Components/CardArray.js';\r\nimport SearchBox from '../Components/SearchBox.js';\r\nimport './App.css';\r\nimport Scroll from '../Components/Scroll.js';\r\nimport ErrorBoundary from '../Components/ErrorBoundary.js';\r\n\r\nclass App extends React.Component {\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t\tthis.state = {\r\n\t\t\trobots :[],\r\n\t\t\tSearchField : ''\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\r\n\t\t\t  .then(response => response.json())\r\n\t\t\t  .then(users => this.setState({robots : users}))\r\n\t}\r\n\r\n\tonSearchChange = (event) =>{\r\n\t\tthis.setState({SearchField: event.target.value})\r\n\t}\r\n\r\n\trender() {\r\n\t\t\tconst { robots, SearchField} = this.state;\r\n\t\t\tconst filteredRobots = robots.filter(robot =>{\r\n\t\t\treturn robot.name.toLowerCase().includes(SearchField.toLowerCase())\r\n\t\t\t})\r\n\t\t\tif(!robots.length){\r\n\t\t\t\treturn <h2>loading</h2>\r\n\t\t\t} else {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div className = 'tc'>\r\n\t\t\t\t\t<h1 className='f1'><strong>RoboFriends</strong></h1>\r\n\t\t\t\t\t<SearchBox SearchChange= {this.onSearchChange}/>\r\n\t\t\t\t\t<Scroll>\r\n\t\t\t\t\t\t<ErrorBoundary>\r\n\t\t\t\t\t\t\t<CardArray robots = {filteredRobots}/>\r\n\t\t\t\t\t\t</ErrorBoundary>\r\n\t\t\t\t\t</Scroll>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t);\r\n\t\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './Container/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'tachyons';\r\n\r\n\r\nReactDOM.render(<App /> ,document.getElementById('root'));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}